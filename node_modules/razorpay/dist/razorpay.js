// Assuming you have these imported at the top of your file
const API = require('./api');
const pkg = require('../package.json');
const _require = require('./utils/razorpay-utils');
const { validateWebhookSignature } = _require; // Destructuring to get the function

var Razorpay = function () {
  _createClass(Razorpay, null, [{
    key: 'validateWebhookSignature',
    value: validateWebhookSignature // Using the destructured function directly
  }]);

  function Razorpay(options = {}) {
    _classCallCheck(this, Razorpay);

    const { key_id, key_secret, headers } = options; // Destructuring for cleaner variable names

    if (!key_id) {
      throw new Error('`key_id` is mandatory');
    }

    this.key_id = key_id;
    this.key_secret = key_secret; // Only assign if provided

    this.api = new API({
      hostUrl: 'https://api.razorpay.com',
      ua: 'razorpay-node@' + Razorpay.VERSION,
      key_id: key_id,
      key_secret: key_secret, // Include key_secret here if needed for your API calls
      headers: headers
    });
    this.addResources();
  }

  _createClass(Razorpay, [{
    key: 'addResources',
    value: function addResources() {
      Object.assign(this, {
        accounts: require('./resources/accounts')(this.api),
        stakeholders: require('./resources/stakeholders')(this.api),
        // ... other resources (assuming they exist)
      });
    }
  }]);

  return Razorpay;
}();

Razorpay.VERSION = pkg.version;
module.exports = Razorpay